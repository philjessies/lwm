.\" lwm, a window manager for X11
.\" Copyright (C) 1997-2016 Elliott Hughes, James Carter
.\" 
.\" This program is free software; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License
.\" as published by the Free Software Foundation; either version 2
.\" of the License, or (at your option) any later version.
.\" 
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\" 
.\" You should have received a copy of the GNU General Public License
.\" along with this program; if not, write to the Free Software
.\" Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
.\" 
.TH LWM 1
.SH NAME
lwm \- Lightweight Window Manager for the X Window System
.SH SYNTAX
\fBlwm \fP[\fB\-s\fP session-id] [\fB\-debugcli\fP] 
.SH DESCRIPTION
\fILwm\fP is a window manager for the X Window System.  It provides enough
features to allow the user to manage their windows, and no more.
.PP
Windows are surrounded by a frame with a titlebar at the top next to a close
icon (in the form of a cross).  The window with input focus is coloured
differently from the others.
.PP
\fILwm\fP uses the sloppy-focus scheme by default, whereby moving the pointer
into a window gives it input focus, but moving the pointer out does not cause
focus to be lost until the pointer enters another window.  Click-to-focus mode
can be enabled using the \fIfocus\fP resource.
.PP
A button 1 click on a window frame brings it to the top.  Dragging
button 1 on the frame of a resizable window repositions that edge of
the window.  If a corner rather than an edge is dragged, then both edges
forming the corner are repositioned.  While you're reshaping a window,
a little window pops up to show you the window's current size.  Dragging the
title bar always moves the window.  If you wish to resize from the top edge,
use the top-right corner.
.PP
In the default configuration, button 1 on the root window does nothing.
.PP
Button 2 is used to drag a window by its frame, repositioning the window
but maintaining its position in the window stack.  This always just moves the
window, never resizing it.
.PP
In the default configuration, button 2 on the root window brings up a
new shell.
.PP
A button 3 click on a window frame hides that window.  Pressing
button 3 on the root window brings up a menu of all the windows.  Moving the
pointer over menu items while holding button 3 displays a coloured box
showing the window outline (even if it's hidden).
Releasing the button while over an item will unhide or raise the named window,
and give it focus.  The menu has two sections: the items above the dotted
line refer to hidden windows; those below to already visible windows.
.PP
A button 3 click in the frame while Shift is held down pushes the window
to the back, under any other windows.
.PP
A window may be closed by clicking on the little white cross in the top-left
corner of its frame.
.SH OPTIONS
\fILwm\fP accepts the following command line options:
.PP
.TP 8
.B \-s
specifies a client ID for the X Session Management system, and is used
exclusively by session managers.
.TP 8
.B \-debugcli[=command1;command2...]
enables the debug CLI (command line interface), which allows LWM to be given
certain commands on stdin.  This is intended for debugging, not for normal LWM
use.  For details of commands available on the CLI, refer to the BUGS file.
If an '=commands' suffix is present, it is interpreted as a sequence of debugcli
commands, separated by ';', which LWM's debugcli will execute after startup is
complete.
.TP 8
.B \-test
runs all LWM's unit tests, exiting successfully if all tests pass.
.SH RESOURCES
\fILwm\fP understands the following X resources:
.TP 12
.B focus
if set to 'click', click-to-focus mode is activated, otherwise sloppy focus
.TP 12
.B titleFont
font used in window titles, and in the popup menu and size indicator
.TP 12
.B border
width in pixels of window borders
.TP 12
.B topBorder
how many of the top pixels of the title bar should be used as a resize widget.
Set this to zero to disable resizing on the title bar entirely (in which case,
the whole title bar, except the top-left and -right corners, will move the
window).
.TP 12
.B button1
program spawned when button 1 is clicked on the root window
.TP 12
.B button2
program spawned when button 2 is clicked on the root window
.TP 12
.B titleBGColour
background colour of the active window's title bar
.TP 12
.B borderColour
background colour of the active window's border
.TP 12
.B inactiveBorderColour
background colour of inactive windows' title bars and borders
.TP 12
.B windowHighlightColour
colour of the box showing window outlines from the window list menu
.TP 12
.B titleColour
colour of the title bar text in the active window
.TP 12
.B inactiveTitleColour
colour of the title bar text in inactive windows
.TP 12
.B closeIconColour
colour of the close icon in the active window
.TP 12
.B inactiveCloseIconColour
colour of the close icon in inactive windows
.TP 12
.B popupTextColour
text colour of the popup window (unhide menu and resizing popup)
.TP 12
.B popupBackgroundColour
background colour of the popup window
.TP 12
.B appIcon
where to show application icons. Possible values are 'none', 'title' (show only
in the app's window title bar), 'menu' (only in the unhide menu) or 'both'.
.SH "SEE ALSO"
.PP
X(7)
.SH AUTHORS
Elliott Hughes <ehughes@bluearc.com>,
James Carter <james@jfc.org.uk>,
Phil Norman <philnorm@gmail.com>
